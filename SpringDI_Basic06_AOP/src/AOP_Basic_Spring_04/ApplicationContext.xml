<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 스프링에서 처리 할 부분 
	//1. 실 객체의 주소
		Calc calc = new NewCalc();
		
	//2. 가짜를 생성할 것
		Calc cal=(Calc)Proxy.newProxyInstance(calc.getClass().getClassLoader(),//실 객체의 메타정보
								calc.getClass().getInterfaces(),
								new LogPrintHandler(calc));
	-->
	<bean id="calc"  class="AOP_Basic_Spring_04.NewCalc"></bean>
	<bean id="logPrintAroundAdvice"  class="AOP_Basic_Spring_04.LogPrintAroundAdvice"></bean>
	<bean id="logPrintBeforeAdvice"  class="AOP_Basic_Spring_04.LogPrintBeforeAdvice"></bean>
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces"><!-- 행위정보 -->
			<list>
				<value>AOP_Basic_Spring_04.Calc</value>
			</list>
		</property>
		<property name="target" ref="calc"/><!-- 실객체의 주소 -->
		<property name="interceptorNames"><!-- 보조프로그래밍 -->
			<list>
				<!-- <value>logPrintAroundAdvice</value> --><!-- Advice를 가지는 보조업무 객체 -->
				<value>logPrintBeforeAdvice</value>
			</list>
		</property>
	</bean>
	
</beans> 




