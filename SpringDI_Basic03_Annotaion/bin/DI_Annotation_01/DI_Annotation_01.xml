<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 
		- java 코드 -
		MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		
		viewer.setRecorder(recorder); // 주입 ( injection )
		System.out.println(viewer.getRecorder());
	
	
	 -->
	 <!--   1단계 : xml
	<bean id="recorder" class="DI_Annotaion_01.Recorder"></bean>
	
	<bean id="monitorViewer" class="DI_Annotaion_01.MonitorViewer">
		<property name="recorder">
			<ref bean="recorder"/>
		</property>
	</bean>
	-->
	
	<!-- 
	@Autowired > Type기반
	목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입해 준다. 
	그러므로 (IOC Container) 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 
	스프링은 예외를 발생시키게 된다.
	
	설정 위치 : 생성자, 필드, 메소드(굳이 setter메소드가 아니여도 된다)
	
	@Autowired 동작되기 위해서 선행 겍체가 필요하다 (IOC 컨테이너 안에) 생성 되어 있어야 한다.
	>> new AutowiredAnnotationBeanPostProcessor();
	import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor;
	
	*추가설정 : AutowiredAnnotationBeanPostProcessor 클래스를 빈으로 등록시켜줘야 한다. 
	
	<context:annotation-config />
	** Annotion 사용에 필요한 모든 클래스를 한방에 빈객체를 생성해서 컨테이너에 올리겠다.
	** 단점 : 사용하지 않는 Bean 객체도 자동 등록
	
	예외 ) java.lang.NoClassDefFoundError: org/springframework/aop/TargetSource
	>> @Autowired 동작시 내부적으로 AOP작업
	
	** @Autowired 정상적으로 동작되지 않는 경우
	1. injection 되는 타입 객체가(bean) IOC컨테이너에 없는 경우 (exception)
	
	2. IOC 컨테이너 안에 같은 타입의 객체가 여러개 존재하는 경우 예외 발생
	
	3. IOC 컨테이너 안에 같은 타입의 객체가 여러개 존재하더라도.. 
		beam id값이 setter 함수의 memberfield명과 동일 하다면 자동 주입 성공
	
	 -->
	  <context:annotation-config /> 
	<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
	
	<bean id="monitorViewer" class="DI_Annotation_01.MonitorViewer"></bean>
	
</beans>



